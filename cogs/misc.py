from discord.ext import commands
import discord
from log import *
from typing import *
from config import *
import utils
import datetime


# setup
async def setup(bot: commands.Bot):

    # ping command
    @bot.hybrid_command(
        name='ping',
        description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∏–Ω–≥ –±–æ—Ç–∞.'
    )
    async def slash_ping(ctx: commands.Context):
        '''
        Shows bot ping.
        '''
        log(f'{ctx.author.id} requested bot ping')
        ping = round(bot.latency*1000)
        embed = discord.Embed(
            title='üèì –ü–æ–Ω–≥!', description=f'**{ping}** –º—Å',
            color=DEFAULT_C
        )
        await ctx.reply(embed=embed)


    @bot.hybrid_command(
        name='about',
        description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ.'
    )
    async def slash_about(ctx: commands.Context):
        '''
        Shows bot info.
        '''
        log(f'{ctx.author.id} requested bot info')
        
        embed = discord.Embed(
            color=DEFAULT_C, title='‚Ñπ –û –±–æ—Ç–µ',
            description='–°–æ–∑–¥–∞—Ç–µ–ª—å: `moontr3` (obviously)\n'\
                f'–ö–æ–Ω—Ç—Ä–∏–±—å—é—Ç–æ—Ä: `mbutsk`\n'\
                f'–ù–∞–ø–∏—Å–∞–Ω –Ω–∞ **Python** –∏ **discord.py**'\
                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ: **{len(bot.mg.users)}**\n'\
                f'–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: **{ctx.guild.member_count}**'
        )

        await ctx.reply(embed=embed)


    # purge command
    @discord.app_commands.describe(
        amount='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—á–∏—Å—Ç–∫–∏',
        member='–§–∏–ª—å—Ç—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞',
        keywords='–§–∏–ª—å—Ç—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ —Å –Ω—É–∂–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º'
    )
    @bot.hybrid_command(
        name='purge',
        description='–£–¥–∞–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.'
    )
    async def slash_purge(
        ctx: commands.Context, amount:int,
        member:discord.User=None, keywords:str=''
    ):
        '''
        Purges the channel.
        '''
        # checking permissions
        if not ctx.permissions.manage_messages:
            await ctx.reply(embed=MISSING_PERMS_EMBED)
            return
        
        # sending loading message
        await ctx.reply(embed=LOADING_EMBED)

        # just purge
        if member == None and keywords == '':
            deleted = await ctx.channel.purge(limit=amount)
            text = f'–£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ **{len(deleted)}** —Å–æ–æ–±—â–µ–Ω–∏–π!'

        # filter by user
        elif member != None and keywords == '':
            def check(m):
                return m.author.id == member.id
            
            deleted = await ctx.channel.purge(limit=amount, check=check)
            text = f'–£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ **{len(deleted)}** —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç {member.mention}!'

        # filter by keywords
        elif member == None and keywords != '':
            def check(m):
                return keywords in m.content
            
            deleted = await ctx.channel.purge(limit=amount, check=check)
            text = f'–£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ **{len(deleted)}** –∏–∑ **{amount}** –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π!'
        
        # both
        else:
            def check(m):
                return (keywords in m.content) and\
                    (m.author.id == member.id)
            
            deleted = await ctx.channel.purge(limit=amount, check=check)
            text = f'–£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ **{len(deleted)}** —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç {member.mention}!'

        log(f'{ctx.author.id} purged {len(deleted)}/{amount} messages in {ctx.channel.id}')

        # sending message
        # checking if there even was something deleted
        if len(deleted) == 0:
            embed = discord.Embed(
                title='üóë –û—á–∏—Å—Ç–∫–∞', color=ERROR_C,
                description='–ü–æ —Ç–∞–∫–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.'
            )
        else:
            embed = discord.Embed(
                title='üóë –û—á–∏—Å—Ç–∫–∞', description=text,
                color=DEFAULT_C
            )
        await ctx.response.edit_message(embed=embed)


    # mute command
    @discord.app_commands.describe(
        member='–£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å',
        time='–î–ª–∏–Ω–∞ –º—É—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "10h", "3–¥" –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ',
        reason='–ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞'
    )
    @bot.hybrid_command(
        name='mute',
        description='–ú—É—Ç–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.'
    )
    async def slash_mute(
        ctx: commands.Context, member:discord.Member,
        time:str, reason:str=None
    ):
        '''
        Mutes the specified user.
        '''
        # checking permissions
        if not ctx.permissions.moderate_members:
            await ctx.reply(embed=MISSING_PERMS_EMBED)
            return

        # muting user
        data = utils.seconds_from_string(time)
        # checking input validity
        if data == None:
            embed = discord.Embed(
                title='ü§ê –¢–∞–π–º–∞—É—Ç', color=ERROR_C,
                description=f'–£–∫–∞–∑–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–ª–∏–Ω–∞.'
            )
            await ctx.reply(embed=embed, ephemeral=True)
            return
        
        else:
            length = data[0]
            unit_name = data[1]
            unit_length = data[2]

        length = datetime.timedelta(seconds=length)
        
        # timeouting user
        try:
            await member.timeout(length, reason=reason)
            log(f'{ctx.author.id} timeouted user {member.id} for {time}')
        
        except Exception as e:
            log(f'Error while {ctx.author.id} was timeouting {member.id} for {time}: {e}', level=ERROR)
            embed = discord.Embed(
                title='ü§ê –¢–∞–π–º–∞—É—Ç', color=ERROR_C,
                description=f'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞.'
            )
            await ctx.reply(embed=embed, ephemeral=True)
            return

        # sending message
        if reason == None:
            embed = discord.Embed(
                title='ü§ê –¢–∞–π–º–∞—É—Ç', color=DEFAULT_C,
                description=f'{member.mention} —É—Å–ø–µ—à–Ω–æ –∑–∞–º—å—é—á–µ–Ω –Ω–∞ **{unit_length} {unit_name}**.'
            )
        else:
            embed = discord.Embed(
                title='ü§ê –¢–∞–π–º–∞—É—Ç', color=DEFAULT_C,
                description=f'{member.mention} —É—Å–ø–µ—à–Ω–æ –∑–∞–º—å—é—á–µ–Ω –Ω–∞ **{unit_length} {unit_name}**'\
                    f' —Å –ø—Ä–∏—á–∏–Ω–æ–π **{utils.remove_md(reason)}**.'
            )
        await ctx.reply(embed=embed)


    # unmute command
    @discord.app_commands.describe(
        member='–£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–º—É—Ç–∏—Ç—å'
    )
    @bot.hybrid_command(
        name='unmute',
        description='–†–∞–∑–º—É—á–∏–≤–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.'
    )
    async def slash_unmute(
        ctx: commands.Context, member:discord.Member
    ):
        '''
        Unmutes the specified user.
        '''
        # checking permissions
        if not ctx.permissions.moderate_members:
            await ctx.reply(embed=MISSING_PERMS_EMBED)
            return

        # checking if the user is muted or not
        if member.timed_out_until == None:
            embed = discord.Embed(
                title='ü§ê –†–∞–∑–º—É—Ç', color=ERROR_C,
                description=f'–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –∏ —Ç–∞–∫ –Ω–µ –≤ –º—É—Ç–µ.'
            )
            await ctx.reply(embed=embed, ephemeral=True)
            return

        # unmuting
        try:
            await member.timeout(None)
            log(f'{ctx.author.id} unmuted user {member.id}')

        except Exception as e:
            log(f'Error while {ctx.author.id} was unmuting {member.id}: {e}', level=ERROR)
            embed = discord.Embed(
                title='ü§ê –†–∞–∑–º—É—Ç', color=ERROR_C,
                description=f'–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞.'
            )
            await ctx.reply(embed=embed, ephemeral=True)
            return
            
        embed = discord.Embed(
            title='ü§ê –†–∞–∑–º—É—Ç', color=DEFAULT_C,
            description=f'–í—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º—É—Ç–∏–ª–∏ {member.mention}!'
        )
        await ctx.reply(embed=embed)
